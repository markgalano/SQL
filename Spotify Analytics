#For this project, I downloaded Spotify data from Kaggle.
  --source:https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021?select=spotify_top50_2021.csv

#Then I created a table to insert Spotify data into using SQLite.
  
CREATE TABLE BIT_DB.Spotifydata
(
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL
)

#Finally, I performed analytics on the data using SQLite RDBMS. 

/*Questions*/

--What's the danceability for the 10 most popular songs?
SELECT artist_name, track_name, popularity, danceability
FROM BIT_DB.Spotifydata
  GROUP BY artist_name, track_name
  ORDER BY popularity desc
  LIMIT 10;

--Who are the top 10 artists based on popularity? 
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
  GROUP BY artist_name, popularity
  ORDER BY popularity desc
  LIMIT 10;

--What artist released the longest song? 
SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;

/*CTE Sample*/

--Pt.1 Calculate the average popularity for the artists in the Spotify data table. 
SELECT artist_name, AVG(popularity) as average_popularity
FROM Spotifydata
GROUP BY artist_name;  

--Pt. 2 Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH Popularity_AVG AS
(
SELECT s.artist_name, AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name  
)

SELECT artist_name, average_popularity, 'Top Star' AS tag
FROM Popularity_AVG
WHERE average_popularity >=90;
